--- a/drivers/mtd/mtdpart.c	2011-08-29 09:12:39.000000000 +0800
+++ b/drivers/mtd/mtdpart.c	2011-09-29 14:38:28.049481001 +0800
@@ -21,7 +21,12 @@
 #include <linux/root_dev.h>
 #include <linux/magic.h>
 
+#include <linux/string.h>
+#include <asm/mips_machine.h>
+
 int getFlashSize;  // get flash size
+
+
 #define MTD_ERASE_PARTIAL	0x8000 /* partition only covers parts of an erase block */
 
 /* Our partition linked list */
@@ -399,7 +404,11 @@
 
 static struct mtd_part *add_one_partition(struct mtd_info *master,
 		const struct mtd_partition *part, int partno,
-		uint64_t cur_offset)
+		uint64_t cur_offset,
+		int SPI_AR71xx_AUTO_MTD,
+		uint64_t SPI_AR71xx_UBOOT_SIZE ,
+		uint64_t SPI_AR71xx_KERNEL_SIZE ,
+		uint64_t SPI_AR71xx_ART_SIZE)
 {
 	struct mtd_part *slave;
 
@@ -480,6 +489,18 @@
 	slave->master = master;
 	slave->offset = part->offset;
 
+//start auto mtd flash.....only for 3420 test patch by flyzjhz@gmail.com  //
+if(SPI_AR71xx_AUTO_MTD > 0 ){
+		if(strcmp(slave->mtd.name,"rootfs") == 0 )  
+		slave->mtd.size = master->size - SPI_AR71xx_UBOOT_SIZE - SPI_AR71xx_KERNEL_SIZE - SPI_AR71xx_ART_SIZE;
+   		if(strcmp(slave->mtd.name,"art") == 0 )  
+		slave->offset = master->size - SPI_AR71xx_ART_SIZE;
+       		if(strcmp(slave->mtd.name,"firmware") == 0 ) 
+		slave->mtd.size = master->size - SPI_AR71xx_UBOOT_SIZE - SPI_AR71xx_ART_SIZE;
+}
+
+//auto mtd flash finsh .....*/
+
 	if (slave->offset == MTDPART_OFS_APPEND)
 		slave->offset = cur_offset;
 	if (slave->offset == MTDPART_OFS_NXTBLK) {
@@ -580,6 +601,7 @@
 }
 
 #ifdef CONFIG_MTD_ROOTFS_SPLIT
+
 #define ROOTFS_SPLIT_NAME "rootfs_data"
 #define ROOTFS_REMOVED_NAME "<removed>"
 
@@ -626,7 +648,11 @@
 	return 0;
 }
 
-static int split_rootfs_data(struct mtd_info *master, struct mtd_info *rpart, const struct mtd_partition *part)
+static int split_rootfs_data(struct mtd_info *master, struct mtd_info *rpart, const struct mtd_partition *part,
+				int SPI_AR71xx_AUTO_MTD,
+				uint64_t SPI_AR71xx_UBOOT_SIZE ,
+				uint64_t SPI_AR71xx_KERNEL_SIZE ,
+				uint64_t SPI_AR71xx_ART_SIZE)
 {
 	struct mtd_partition *dpart;
 	struct mtd_part *slave = NULL;
@@ -650,7 +676,12 @@
 	memcpy(dpart, part, sizeof(*part));
 	dpart->name = (unsigned char *)&dpart[1];
 	strcpy(dpart->name, ROOTFS_SPLIT_NAME);
+// mtd auto fix with flash size patch by flyzjhz@gmail.com start
+		if(SPI_AR71xx_AUTO_MTD > 0){
+      		dpart->size = master->size - SPI_AR71xx_UBOOT_SIZE - SPI_AR71xx_KERNEL_SIZE - SPI_AR71xx_ART_SIZE;
+		}
 
+// mtd auto fix with flash size patch end 
 	dpart->size -= split_offset - dpart->offset;
 	dpart->offset = split_offset;
 
@@ -660,7 +691,7 @@
 	printk(KERN_INFO "mtd: partition \"%s\" created automatically, ofs=%llX, len=%llX \n",
 		ROOTFS_SPLIT_NAME, dpart->offset, dpart->size);
 
-	slave = add_one_partition(master, dpart, 0, split_offset);
+	slave = add_one_partition(master, dpart, 0, split_offset,0,0,0,0);
 	if (!slave) {
 		kfree(dpart);
 		return -ENOMEM;
@@ -693,7 +724,7 @@
 		tpart.size = mtd->size;
 		tpart.offset = part->offset;
 
-		return split_rootfs_data(part->master, &part->mtd, &tpart);
+		return split_rootfs_data(part->master, &part->mtd, &tpart,0,0,0,0);
 	} else if ((offset > 0) && mtd->split) {
 		/* update the offsets of the existing partition */
 		size = mtd->size + part->offset - offset;
@@ -737,14 +768,22 @@
 		       int nbparts)
 {
 	struct mtd_part *slave;
-	uint64_t cur_offset = 0;
-	int i, ret;
+	uint64_t cur_offset = 0,SPI_AR71xx_UBOOT_SIZE = 0 ,SPI_AR71xx_KERNEL_SIZE = 0 ,SPI_AR71xx_ART_SIZE = 0;
+	int i, ret,SPI_AR71xx_AUTO_MTD = 0;
 
 	printk(KERN_NOTICE "Creating %d MTD partitions on \"%s\":\n", nbparts, master->name);
+	
+	if (!strcmp(mips_machine_name, "TP-LINK TL-MR3420")) {
+	SPI_AR71xx_AUTO_MTD = 1;
+	SPI_AR71xx_UBOOT_SIZE = 0x020000 ;
+	SPI_AR71xx_KERNEL_SIZE = 0x140000 ;
+	SPI_AR71xx_ART_SIZE = 0x010000 ;
+		}
+
 	getFlashSize = master->size >> 10;
 
 	for (i = 0; i < nbparts; i++) {
-		slave = add_one_partition(master, parts + i, i, cur_offset);
+		slave = add_one_partition(master, parts + i, i, cur_offset,SPI_AR71xx_AUTO_MTD,SPI_AR71xx_UBOOT_SIZE,SPI_AR71xx_KERNEL_SIZE,SPI_AR71xx_ART_SIZE);
 		if (!slave)
 			return -ENOMEM;
 
@@ -757,7 +796,7 @@
 			}
 #endif
 #ifdef CONFIG_MTD_ROOTFS_SPLIT
-			ret = split_rootfs_data(master, &slave->mtd, &parts[i]);
+			ret = split_rootfs_data(master, &slave->mtd, &parts[i],SPI_AR71xx_AUTO_MTD,SPI_AR71xx_UBOOT_SIZE,SPI_AR71xx_KERNEL_SIZE,SPI_AR71xx_ART_SIZE);
 			/* if (ret == 0)
 				j++; */
 #endif
