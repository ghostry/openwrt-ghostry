--- linux-2.6.32.50/drivers/net/cs89x0.c.orig	2011-12-10 01:24:23.000000000 +0800
+++ linux-2.6.32.50/drivers/net/cs89x0.c	2012-03-06 15:59:19.101393839 +0800
@@ -192,6 +192,16 @@
 	PBC_BASE_ADDRESS + PBC_CS8900A_IOBASE + 0x300, 0
 };
 static unsigned cs8900_irq_map[] = {EXPIO_INT_ENET_INT, 0, 0, 0};
+
+
+#elif defined(CONFIG_ARCH_S3C2410)
+#include<asm/irq.h>
+#include <mach/regs-mem.h>
+#define S3C24XX_PA_CS8900 0x19000000
+static unsigned int netcard_portlist[]= {0, 0};
+static unsigned int cs8900_irq_map[] = {IRQ_EINT9, 0, 0, 0};
+
+
 #else
 static unsigned int netcard_portlist[] __used __initdata =
    { 0x300, 0x320, 0x340, 0x360, 0x200, 0x220, 0x240, 0x260, 0x280, 0x2a0, 0x2c0, 0x2e0, 0};
@@ -314,6 +324,13 @@
 	int irq;
 	int io;
 
+
+#if defined(CONFIG_ARCH_S3C2410)
+	unsigned int oldval_bwscon;
+	unsigned int oldval_bankcon3;
+#endif
+
+
 	if (!dev)
 		return ERR_PTR(-ENODEV);
 
@@ -322,6 +339,29 @@
 	io = dev->base_addr;
 	irq = dev->irq;
 
+
+#if defined(CONFIG_ARCH_S3C2410)
+	if(netcard_portlist[0])
+		return -ENODEV;
+
+	netcard_portlist[0] = (unsigned int)ioremap(S3C24XX_PA_CS8900, SZ_1M)+0x300;
+	dev->dev_addr[0] = 0x08;
+	dev->dev_addr[1] = 0x89;
+	dev->dev_addr[2] = 0x89;
+	dev->dev_addr[3] = 0x89;
+	dev->dev_addr[4] = 0x89;
+	dev->dev_addr[5] = 0x89;
+
+	oldval_bwscon = *((volatile unsigned int *)S3C2410_BWSCON);
+	*((volatile unsigned int *)S3C2410_BWSCON) = (oldval_bwscon & ~
+		(3<<12)) | S3C2410_BWSCON_DW3_16 | 
+		S3C2410_BWSCON_WS3 | S3C2410_BWSCON_ST3;
+	oldval_bankcon3 = *((volatile unsigned int *)S3C2410_BANKCON3);
+	*((volatile unsigned int *)S3C2410_BANKCON3) = 0x1f7c;
+
+#endif
+
+
 	if (net_debug)
 		printk("cs89x0:cs89x0_probe(0x%x)\n", io);
 
@@ -342,6 +382,14 @@
 		goto out;
 	return dev;
 out:
+
+#if defined(CONFIG_ARCH_S3C2410)
+	iounmap(netcard_portlist[0]);
+	netcard_portlist[0] = 0;
+	*((volatile unsigned int *)S3C2410_BWSCON) = oldval_bwscon;
+	*((volatile unsigned int *)S3C2410_BANKCON3) = oldval_bankcon3;
+#endif
+
 	free_netdev(dev);
 	printk(KERN_WARNING "cs89x0: no cs8900 or cs8920 detected.  Be sure to disable PnP with SETUP\n");
 	return ERR_PTR(err);
@@ -1277,7 +1325,7 @@
 	int i;
 	int ret;
 
-#if !defined(CONFIG_SH_HICOSH4) && !defined(CONFIG_ARCH_PNX010X) /* uses irq#1, so this won't work */
+#if !defined(CONFIG_SH_HICOSH4) && !defined(CONFIG_ARCH_PNX010X) && !defined(CONFIG_ARCH_S3C2410) /* uses irq#1, so this won't work */
 	if (dev->irq < 2) {
 		/* Allow interrupts to be generated by the chip */
 /* Cirrus' release had this: */
@@ -1308,7 +1356,7 @@
 	else
 #endif
 	{
-#ifndef CONFIG_CS89x0_NONISA_IRQ
+#if !defined(CONFIG_CS89x0_NONISA_IRQ) && !defined(CONFIG_ARCH_S3C2410)
 		if (((1 << dev->irq) & lp->irq_map) == 0) {
 			printk(KERN_ERR "%s: IRQ %d is not in our map of allowable IRQs, which is %x\n",
                                dev->name, dev->irq, lp->irq_map);
@@ -1323,7 +1371,15 @@
 		writereg(dev, PP_BusCTL, ENABLE_IRQ | MEMORY_ON);
 #endif
 		write_irq(dev, lp->chip_type, dev->irq);
+
+
+#if defined(CONFIG_ARCH_S3C2410)
+		ret = request_irq(dev->irq, &net_interrupt, IRQF_TRIGGER_RISING, dev->name, dev);
+#else
 		ret = request_irq(dev->irq, &net_interrupt, 0, dev->name, dev);
+#endif
+
+
 		if (ret) {
 			if (net_debug)
 				printk(KERN_DEBUG "cs89x0: request_irq(%d) failed\n", dev->irq);
@@ -1393,8 +1449,8 @@
 	case A_CNF_MEDIA_10B_2: result = lp->adapter_cnf & A_CNF_10B_2; break;
         default: result = lp->adapter_cnf & (A_CNF_10B_T | A_CNF_AUI | A_CNF_10B_2);
         }
-#ifdef CONFIG_ARCH_PNX010X
+#if defined(CONFIG_ARCH_PNX010X) || defined(CONFIG_ARCH_S3C2410) 
 	result = A_CNF_10B_T;
 #endif
         if (!result) {
                 printk(KERN_ERR "%s: EEPROM is configured for unavailable media\n", dev->name);
@@ -1834,7 +1890,7 @@
  * avoid breaking someone's startup scripts
  */
 
-static int io;
+static unsigned int io;
 static int irq;
 static int debug;
 static char media[8];
--- linux-2.6.32.50/drivers/net/Kconfig.orig	2012-03-06 15:49:57.893393581 +0800
+++ linux-2.6.32.50/drivers/net/Kconfig	2012-03-06 15:58:08.965393807 +0800
@@ -1559,10 +1559,11 @@
 
 	  If in doubt, say N.
 
+# for the s3c2410 platform.
 config CS89x0
 	tristate "CS89x0 support"
 	depends on NET_ETHERNET && (ISA || EISA || MACH_IXDP2351 \
-		|| ARCH_IXDP2X01 || ARCH_PNX010X || MACH_MX31ADS)
+		|| ARCH_IXDP2X01 || ARCH_PNX010X || MACH_MX31ADS) || ARCH_S3C2410
 	---help---
 	  Support for CS89x0 chipset based Ethernet cards. If you have a
 	  network (Ethernet) card of this type, say Y and read the
